###############################################################################
# 
# @path NPSOL/source/Templates/SimpleWrapperTemplate/createExecutableBVPOpt
#
# @brief creates executable file cwrap_npsol with main function in it
#
# @revision
# 2013-06-19 created by dka
#
###############################################################################
createExecutableBVPOpt:= proc()

  local OldDir, B_swnpsol, LE_swnpsol; 


    OldDir:= currentdir();
    currentdir(WorkingDir); 

  # instead of call of define_external create cwrap_npsol with main function in it
  # BL, BU, CLAMBDA are put into one argument and the same is for LENIW, LENW 

    B_swnpsol := Matrix([[convert(BL_swnpsol, array)], [convert(BU_swnpsol, array)], [convert(clambda_swnpsol, array)]], datatype = float[8], order = C_order);
    LE_swnpsol := Vector([LENIW, LENW], datatype = integer[4]);

    BVPOpt:-createExecutableNPSOL(
      N,                      #N
      NCLIN,                  #NCLIN
      NCNLN,                  #NCNLN
      NROWA,                  #NROWA
      NROWJ,                  #NROWJ
      NROWR,                  #NROWR
      A_swnpsol,              #A
      B_swnpsol,              #BL,BU,CLAMBDA    
      'inform_swnpsol',       #INFORM 
      'iter_swnpsol',         #ITER     
      istate_swnpsol,         #ISTATE 
      c_swnpsol,              #C
      cjac_swnpsol,           #CJAC     
     'objf_swnpsol',         #OBJF      
      grad_swnpsol,           #OBJGRD
      r_swnpsol,              #R
      xvec_swnpsol,           #X  
      LE_swnpsol,             #IW, LENW
      NumParams,              # not npsol arguments but used to pass
      Params                  # parameters to npsol via common block
    );

  currentdir(OldDir); 

  return(); 

end proc; 
