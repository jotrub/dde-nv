#############################################################
#
# @path AugSys2/NeimarkSackerNV/calculateNV.txt
#
# @brief Sabstitutes list of parameter values from the Neimark-Sacker critical boundary
#        in the augmented NV system and compute normalized normal vector
#
# @param  NeimarkSackerNVSys,
#         NSEigenValueAndEigenVector,
#         list of names of free parameters Alpha,
#         a line of content data from file of parameters
#
# @return NV vector
#
# @notes solving NV system and return NV vector
#
# @revision
# 2008-01-08  Written by dka
#
#############################################################         

calculateNV:= proc( NVSys::table, NSeig::list, ListOfNVparams::list, lineOfData::list(name=EvalsToFloat))

local NVSysWithParam, solutionsNV, R, normOfR;

# put into NV system values of parameters and eigenvalues

NVSysWithParam := AugSys2:-NeimarkSackerNV:-getSysOfEqnsForNV(NVSys, NSeig, lineOfData);

# solving NV system

solutionsNV := fsolve(NVSysWithParam);

# return solution for NV called R

R := Vector(nops(ListOfNVparams), symbol = r);
R := subs(solutionsNV, R);

normOfR:=VectorCalculus[Norm](R);

if (normOfR<>0)
then R:=R/VectorCalculus[Norm](R);
end if;

return(R);

end proc; # calculateNV 
 
 
