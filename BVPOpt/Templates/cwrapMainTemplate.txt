###########################################################################
#
# @path template function cwrapMainTemplate, local to BVPOpt
#
# @brief in cwrapMainTemplate actual information from anNLP is 
#        substituted into the template and executable file
#        with main function is created
#
# @revision
#   2011-12-11 written by dka
###########################################################################
    cwrapMainTemplate:= proc()
  
    local ncnln, nclin, n, nrowj, nrowa, nrowr, numparams, 
          x, c, cjac, par, a, b, objf, grad, r,
          inform, iter, istate, le;
    
    ncnln:= NCNLNsubs; 
    nclin:= NCLINsubs;
    n:= Nsubs;
    nrowj:=NROWJsubs;
    nrowa:=NROWAsubs;
    nrowr:=NROWRsubs;
    numparams:= NumParamsSubs;
    
    x:= array(1..Nsubs,xvec_swnpsolSubs);
    par:= array(1..NumParamsSubs,ParamsSubs);
    c:= array(1..NCNLNsubs, c_swnpsolSubs);
    
    cjac:= array(1..NROWJsubs*Nsubs, cjac_swnpsolSubs);
    a:=array(1..Nsubs*NROWAsubs, A_swnpsolSubs);
    
    b:=array(1..3*(Nsubs+NCNLNsubs+NCLINsubs),B_swnpsolSubs);
    objf:=array(1..1);
    grad:=array(1..Nsubs,grad_swnpsolSubs);
    r := array(1..Nsubs*NROWRsubs,r_swnpsolSubs);
    
    istate:=array(1..(Nsubs+NCNLNsubs+NCLINsubs),istate_swnpsolSubs);
    le:=array(1..2,LE_swnpsolSubs);

  
    cwrapper_npsol(n, nclin, ncnln, nrowa, nrowj, 
                   nrowr, 
                   a, b, 
                   inform, iter, istate, 
                   c, cjac, 
                   objf, 
                   grad, r, x, 
                   le, 
                   numparams, par);
   
    return 0;
end proc;

