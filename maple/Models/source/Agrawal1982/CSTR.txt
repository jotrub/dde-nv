###############################################################################
#
# @path Models/source/Agrawal1982/CSTR.txt
#
# @brief Implements simple fermentation model from Agrawal1982 and some steady 
# states. 
#
# @authors mmo, dka
#
# @revision history:
# 2008-05-15  instead of Sys[...] using Sys["..."] by dka
# 2008-04-11 Created new repository for models from earlier files. 
#
###############################################################################
CSTR:= module()

  local Sys;

  export
    getSys,
    getSolutions; 

  Sys:= table():

  Sys["ODEs"]:= [
    `x1'` = -x1+M*Da*x1, 
    `x2'` = -x2+Sigma*Da*x1
  ];
  
  Sys["ExplicitAEs"]:= [
     k = 1, K = .12, a = 5.4, b = 180, 
     M =-(x2-1)*exp(SF*x2/K), 
     Sigma= M* (a+b*SF)/(a-b*SF*x2+b*SF)
  ];
  
  Sys["AlgVars"]:= [];
  Sys["DynVars"]:= [x1, x2];
  Sys["Parameters"]:= [Da= 0.910365, SF= 0.3];
  Sys["AEs"]:= [];

  #------------------------------------------------------------
  #
  # getSys
  #
  #------------------------------------------------------------
  getSys:= proc()
    return(eval(Sys)); 
  end proc;   

  #------------------------------------------------------------
  #
  # getSolutions
  #
  #------------------------------------------------------------
  getSolutions:= proc()

    local Sol1, solutions; 

    Sol1:= [x1 = .17747, x2 = .87753, Da = .910365, SF = .3, k = 1.,
        K = .12, a = 5.4, b = 180., M = 1.098489246,
        Sigma = 5.431465682];

    solutions:= [Sol1];

    return(solutions); 

  end proc;   

end module; 

