###############################################################################
#
# @path Models/source/Teymour1989b/CSTR.txt
#
# @brief Implements CSTR model from Teymour1989b, some steady states and some
#        special steady states. 
#
# @authors mmo, dka
#
# @todo
# (1) Split into several files, one file per procedure/submodule. 
#
# @revision
# 2008-07-17  instead of Sys[...] using Sys["..."] by dka
# 2008-04-11 Started repository with earlier copies. 
#
###############################################################################
CSTR:= module()

  export 
    checkConsistency, 
    getSys,
    getSolutions; 

  local Sys; 

  #
  # define DAE system
  #
    Sys := table();

    Sys["Ranges"]:= [
      vm= 0..1,
      vs= 0..1,
      zi= 0..1,
      yT= 0..10,
      theta= 0..300,
      If= 0..0.1
    ]; 

    Sys["ODEs"] := [
        `vm'` =(1-phis)* rhomf/rhom-vm* qoutoverqin-theta* vm*
          (lp+ltrm)* Q-2* theta* MWm/rhom* f* kd* zi* If,  
        `vs'` = phis* rhosf/rhos-vs* qoutoverqin, 
        `zi'` =1-theta*
           kd* zi-zi* qoutoverqin, 
        `yT'` =rhof* Cpf/rho/Cp* (yf-yref)-rhof/rho*
           (yT-yref)+negdeltaH/rho/Cp/Tc* theta* vm* lp* rhom/
           MWm* Q-theta* alpha* B/rho/Cp* (yT-1)
    ];  

    Sys["Parameters"] := [theta=200.4617, If=0.0316531, phis=0.6];
    
    Sys["DynVars"] := [vm, vs, zi, yT];

    Sys["ExplicitAEs"] := [
      yf= 2/3, 
      yref= 5/9, 
      Tc= 45, 
      T= 45*yT, 
      negdeltaH= 21000, 
      B= 1.4, 
      alpha= 50/3, 
      a3= -.3495, 
      a2= -6.7530, 
      a1= -.4407, 
      f= .8, 
      R= 1.987, 
      MWs= 74.10, 
      MWm= 86.05, 
      phim= 1-phis, 
      rhosf= 777.2814025, 
      rhomf= 918.5720 , 
      rhomg= 892.0200, 
      rhof= rhomf* phim+rhosf* phis, 
      rhos= 74120/(91.878+.116* T), 
      rhop= 1211-.8496* T, 
      rhom= 958.4-1.3276* T, 
      rhofT= rhom* phim+rhos* phis, 
      vp= 1-vm-vs, 
      rho= rhom* vm+rhos* vs+rhop* vp, 
      kd= exp(ln(60)+34.99620124-30800/R/(T+273)), 
      xt= (rhomf* phim-vm* rhomg)/(rhomf* phim+MWm/MWs* phis*
        rhosf), 
      lt= exp(a1* xt+a2* xt^2+a3* xt^3), 
      ltrm= 417.3948000* exp(-7569./R/(T+273.)), 
      lp= 979.8* exp(-4869/R/(T+273))* 15^(1/2), 
      Cpf= (.470* rhomf* phim+.716* rhosf* phis)/(rhomf*
        phim+rhosf* phis), 
      Cp= (.470* rhom* vm+.716* rhos* vs+rhop* vp*
        (.321425+.955e-3* T))/(rhom* vm+rhos* vs+rhop* vp), 
      Q= 2^(1/2)* (f* kd* zi* If/lt)^(1/2), 
      Rm= (lp+ltrm)* Q* rhom/MWm* vm+2* f* kd* zi* If, 
      qoutoverqin= rhof/rhofT+theta* MWm* Rm* (1/rhop-1/rhom) 
    ];

    #
    # obsolete expressions in ExplicitAEs:
    #       lz= ltrm* vm* rhomg/MWm+.104e-4* lp* vs* rhos/MWs, 
    #       alfa= lp* vm* rhomg/MWm/((lp+ltrm)* vm* rhomg/MWm+.104e-4*
    #         lp* vs* rhos/MWs+lt* Q)

    Sys["AEs"] := [];
    Sys["AlgVars"] := [];

  #--------------------
  #
  # checkConsistency
  #
  #--------------------
  checkConsistency:= proc()
    
     local Sol, Res, AbsRes, MaxAbsRes; 

     Sol:= getSolutions()[1]; 

     #
     # check ODEs
     #
       Res:= evalf(subs(
         Sol,                 
         map(rhs, Sys["ODEs"])
       ));
       AbsRes:= map(abs, Res);
       MaxAbsRes:= max(op(AbsRes));
       if not
         MaxAbsRes< 1.0e-6
       then
         error("error in ODEs larger than expected");
       end if;

     #
     # check ExplicitAEs
     #
       Res:= evalf(subs(
         Sol,                 
         map(lhs- rhs, Sys["ExplicitAEs"])
       ));
       AbsRes:= map(abs, Res);
       MaxAbsRes:= max(op(AbsRes));
       if not
         MaxAbsRes< 1.0e-6
       then
         error("error in ExplicitAEs larger than expected");
       end if;

    return(true); 

  end proc;

  #--------------------
  #
  # getSys
  #
  #--------------------
  getSys:= proc()
    return(eval(Sys)); 
  end proc;

  #--------------------
  #
  # getSolutions
  #
  #--------------------
  getSolutions:= proc()

    local Sol1, Sol2, Sol3, Sol4, Sol5, Sol6, Equil; 

    Sol1:= [
      vm= .1167175, 
      vs= .6434086, 
      zi= .9702816, 
      yT= 1.250588, 
      theta= 200.4617, 
      If= .316531e-1, 
      phis= .6, 
      yf= .6666666667, 
      yref= .5555555556, 
      Tc= 45., 
      T= 56.276460, 
      negdeltaH= 21000., 
      B= 1.4, 
      alpha= 16.66666667, 
      a3= -.3495, 
      a2= -6.7530, 
      a1= -.4407, 
      f= .8, 
      R= 1.987, 
      MWs= 74.10, 
      MWm= 86.05, 
      phim= .4, 
      rhosf= 777.2814025, 
      rhomf= 918.5720, 
      rhomg= 892.0200, 
      rhof= 833.7976415, 
      rhos= 753.2055744, 
      rhop= 1163.187520, 
      rhom= 883.6873717, 
      rhofT= 805.3982933, 
      vp= .2398739, 
      rho= 866.7790518, 
      kd= .3406505834e-3, 
      xt= .2896722329, 
      lt= .4951978566, 
      ltrm= .3948005385e-2, 
      lp= 2.224468994, 
      Cpf= .6075954180, 
      Cp= .5770130601, 
      Q= .5814096079e-2, 
      Rm= .1554641634e-1, 
      qoutoverqin= .9623413178
    ];
    
    # Sol2 is a Hopf point found by content for unscaled system
    Sol2:= [vm = .1174607, vs = .643351, zi = .9642609, yT = 1.282066,
theta = 175.2325, If = .316531e-1, phis = .6, yf = .6666666667, yref =
.5555555556, Tc = 45., T = 57.692970, negdeltaH = 21000., B = 1.4,
alpha = 16.66666667, a3 = -.3495, a2 = -6.7530, a1 = -.4407, f = .8, R
= 1.987, MWs = 74.10, MWm = 86.05, phim = .4, rhosf = 777.2814025,
rhomf = 918.5720, rhomg = 892.0200, rhof = 833.7976415, rhos =
751.9499935, rhop = 1161.984053, rhom = 881.8068130, rhofT =
803.8927213, vp = .2391883, rho = 865.2784161, kd = .4167564465e-3, xt
= .2889429224, lt = .4968024699, ltrm = .4148571323e-2, lp =
2.296520430, Cpf = .6075954180, Cp = .5775101293, Q = .6400511534e-2,
Rm = .1774526010e-1, qoutoverqin = .9640345048, w1_Hopf[1] =
.1922075917, w1_Hopf[2] = -.3111743177e-1, w1_Hopf[3] =
.7017859892e-1, w1_Hopf[4] = .3145015097e-1, w2_Hopf[1] =
-.1547885971, w2_Hopf[2] = .2483523391e-1, w2_Hopf[3] =
.2407872264e-2, w2_Hopf[4] = .9651899829, omega_Hopf= -3.832101806];

    # Sol3 is a Hopf point for scaled system
    Sol3:= [vm = .1174607, vs = .643351, zi = .9642609, yT = 1.282066,
theta = 175.2325, If = .316531e-1, phis = .6, yf = .6666666667, yref =
.5555555556, Tc = 45., T = 57.692970, negdeltaH = 21000., B = 1.4,
alpha = 16.66666667, a3 = -.3495, a2 = -6.7530, a1 = -.4407, f = .8, R
= 1.987, MWs = 74.10, MWm = 86.05, phim = .4, rhosf = 777.2814025,
rhomf = 918.5720, rhomg = 892.0200, rhof = 833.7976415, rhos =
751.9499935, rhop = 1161.984053, rhom = 881.8068130, rhofT =
803.8927213, vp = .2391883, rho = 865.2784161, kd = .4167564465e-3, xt
= .2889429224, lt = .4968024699, ltrm = .4148571323e-2, lp =
2.296520430, Cpf = .6075954180, Cp = .5775101293, Q = .6400511534e-2,
Rm = .1774526010e-1, qoutoverqin = .9640345048, 
w1_Hopf[1] = .2985380149e-1, w1_Hopf[2] = -.5446277708e-2, w1_Hopf[3] = .1719964531, w1_Hopf[4] = .2712922435, w2_Hopf[1] = -.8903305244, w2_Hopf[2] = .1436114129, w2_Hopf[3] = -.1861902261, w2_Hopf[4] = .2189003123,
omega_Hopf= -3.832101806]; 

    # Sol4 is a Hopf point for scaled system
    Sol4:= [vm = .4479726e-1, vs = .6561665, zi = .7439232, yT =
1.681804, theta = 81.01578, If = .6117706e-1, phis = .6, yf =
.6666666667, yref = .5555555556, Tc = 45., T = 75.681180, negdeltaH =
21000., B = 1.4, alpha = 16.66666667, a3 = -.3495, a2 = -6.7530, a1 =
-.4407, f = .8, R = 1.987, MWs = 74.10, MWm = 86.05, phim = .4, rhosf
= 777.2814025, rhomf = 918.5720, rhomg = 892.0200, rhof = 833.7976415,
rhos = 736.3619774, rhop = 1146.701269, rhom = 857.9256654, rhofT =
784.9874526, vp = .29903624, rho = 864.5140164, kd = .4678228352e-2,
xt = .3602483701, lt = .3494138181, ltrm = .7515910137e-2, lp =
3.365816406, Cpf = .6075954180, Cp = .5772253550, Q = .3122403421e-1,
Rm = .4738402245e-1, qoutoverqin = .9652150328, w1_Hopf[1] =
.3380886713, w1_Hopf[2] = -.5797626875e-1, w1_Hopf[3] = .8262857783,
w1_Hopf[4] = -.1056717986, w2_Hopf[1] = .2750254946, w2_Hopf[2] =
-.4570504704e-1, w2_Hopf[3] = -.1534885406, w2_Hopf[4] = -.2951836388,
omega_Hopf= 5.651577654]; 

  # Sol5 is a saddle node with unscaled right eigenvector
  Sol5 := [If = .316531000000000035e-1, phis = .599999999999999978, zi =
.983006407814302152, yT = 1.14788577667081548, vs =
.609267654598932728, theta = 37.6197132983749754, vm =
.332614224959867255, yf = .6666666667, yref = .5555555556, Tc = 45., T
= 51.65485996, negdeltaH = 21000., B = 1.4, alpha = 16.66666667, a3 =
-.3495, a2 = -6.7530, a1 = -.4407, f = .8, R = 1.987, MWs = 74.10, MWm
= 86.05, phim = .4000000000, rhosf = 777.2814025, rhomf = 918.5720,
rhomg = 892.0200, rhof = 833.7976415, rhos = 757.3314338, rhop =
1167.114031, rhom = 889.8230079, rhofT = 810.3280635, vp =
.581181204e-1, rho = 825.2158104, kd = .1742902129e-3, xt =
.7781035800e-1, lt = .9274268208, ltrm = .3348548156e-2, lp =
2.000866343, Cpf = .6075954180, Cp = .5993927069, Q = .3058742835e-2,
Rm = .2109402742e-1, qoutoverqin = 1.010730619, w1_SN[1] =
.2468306963, w1_SN[2] = -.3697574414e-1, w1_SN[3] = .3172420182e-1,
w1_SN[4] = -.9678331348];

# Sol6 is a saddle node with scaled eigenvector
Sol6 := [If = .316531000000000035e-1, phis = .599999999999999978, zi = .983006407814302152, yT = 1.14788577667081548, vs = .609267654598932728, theta = 37.6197132983749754, vm = .332614224959867255, yf = .6666666667, yref = .5555555556, Tc = 45., T = 51.65485996, negdeltaH = 21000., B = 1.4, alpha = 16.66666667, a3 = -.3495, a2 = -6.7530, a1 = -.4407, f = .8, R = 1.987, MWs = 74.10, MWm = 86.05, phim = .4000000000, rhosf = 777.2814025, rhomf = 918.5720, rhomg = 892.0200, rhof = 833.7976415, rhos = 757.3314338, rhop = 1167.114031, rhom = 889.8230079, rhofT = 810.3280635, vp = .581181204e-1, rho = 825.2158104, kd = .1742902129e-3, xt = .7781035800e-1, lt = .9274268208, ltrm = .3348548156e-2, lp = 2.000866343, Cpf = .6075954180, Cp = .5993927069, Q = .3058742835e-2, Rm = .2109402742e-1, qoutoverqin = 1.010730619, w1_SN[1] = .9156583123, w1_SN[2] = -.1371674917, w1_SN[3] = .1176860477, w1_SN[4] = -.3590333245];

    Equil:= [Sol1, Sol2, Sol3, Sol4, Sol5, Sol6]; 

    return(Equil); 

  end proc; 
end module; # CSTR
