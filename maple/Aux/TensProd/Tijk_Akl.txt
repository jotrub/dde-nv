########################################################################
#
# @path Aux/TensProd/Tijk_Akl.txt
#
# @brief Calculates tensor Tijk_Akl
#
########################################################################
    Tijk_Akl:= proc(
      Ten3::'array'(3), 
      AmatArg::{Matrix, 'array'(2)}
    )

      local ListOfTen3Ranges, ListOfAmatRanges,Result, i1, i2, i3, i4, Amat;
      
      Amat:=convert(AmatArg,array); 
      
      #
      # row dim of Amat must be in accordance with 3rd dim of Ten3
      #

        ListOfTen3Ranges:= op(2, eval(Ten3));
        ListOfAmatRanges:= op(2, eval(Amat));

        if not
          op(2, ListOfAmatRanges[1])=
          op(2, ListOfTen3Ranges[3])
        then
          error("incompatible dimensions of 1st and 2nd argument"); 
        end if; 

      #
      # calculate sum
      #
        Result:= array(
          ListOfTen3Ranges[1], ListOfTen3Ranges[2], ListOfAmatRanges[2]
        );

        for i1 from 1 to op(2, ListOfTen3Ranges[1]) do
          for i2 from 1 to op(2, ListOfTen3Ranges[2]) do
            for i4 from 1 to op(2, ListOfAmatRanges[2]) do
              Result[i1, i2, i4]:= add(
              Ten3[i1, i2, i3]* Amat[i3,i4], 
              i3= 1..op(2,ListOfAmatRanges[1])
            );
            end do;
          end do;
        end do; 
      
      return(eval(Result)); 
  
    end proc; # TensProd:-Tijk_Akl 
