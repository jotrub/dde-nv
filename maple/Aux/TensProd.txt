###############################################################################
#
# @path Aux/TensProd.txt
#
# @brief Collects procedures for tensor calculating
#
# @notes
#   (1) procs which return 2 or higher dimensional objects return objects
#   of type array; one-dim objects are returned as lists 
#
# @authors mmo, dka
#
# @revision
# 2013-07-16 added procedure Aij_Tjkl, const_Tijk and Sum_Tijk_Tijk, Tij1_A1k by dka
# 2008-11-19 splited procedures into separate files by dka
# 2008-02-28 changed by dka, NumRows, NumCols calculating without using LinearAlgebra
# 2007-12-20 changed by dka, using instead of linalg LinearAlgebra
# xxxxxx written by mmo
#
###############################################################################
TensProd:= module()

   export
     Ai1_T1jk,
     Aij_Tjkl,
     Tijk_xj,
     Tijk_Akl,
     Tij1_A1k,
     const_Tijk,
     Trans_Tijk_Tikj,
     Sij_Tjk,
     Sum_Tijk_Tijk,
     T1ij_to_Aij,
     Tij_xj, 
     Aij_xj, 
     xi_Tij, 
     xi_Aij, 
     xi_Tij_yj, 
     xi_Aij_yj;

$include <TensProd/Ai1_T1jk.txt>
$include <TensProd/Aij_Tjkl.txt>
$include <TensProd/Tijk_xj.txt>
$include <TensProd/Tijk_Akl.txt>
$include <TensProd/Tij1_A1k.txt>
$include <TensProd/const_Tijk.txt>
$include <TensProd/Trans_Tijk_Tikj.txt>
$include <TensProd/Sij_Tjk.txt>
$include <TensProd/Sum_Tijk_Tijk.txt>
$include <TensProd/T1ij_to_Aij.txt>
$include <TensProd/Tij_xj.txt>
$include <TensProd/Aij_xj.txt>
$include <TensProd/xi_Tij.txt>
$include <TensProd/xi_Aij.txt>
$include <TensProd/xi_Tij_yj.txt>
$include <TensProd/xi_Aij_yj.txt>

  end module;#TenProd
