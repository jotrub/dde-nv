#########################################################################
#
# @path exported procedure init
#
# @param none
#
# @return none, side-effects: sets InstanceCounter to zero
#
# @notes
#   init is called when module is loaded from repository, cp. load
#   option of module; furthermore, there is an explicit call to init
#   at the end of the module which ensures that init is called if
#   module is read from a text file.
#
# @revision
# 050919 added linux as OperatingSystemType -mho
# 030916 added windows as OperatingSystemType -jge
#
#########################################################################
 init:= proc()

    local OperatingSystemTmp,OperatingSystemTmpSol,OperatingSystemTmpWin,OperatingSystemTmpLin;

    InstanceCounter:= 0;

    #
    # set local variable OperatingSystem
    # OSTYPE for UNIX and LINUX OS for Windows
    # if shell var OSTYPE or OS do not exist, assume windows
    #
      OperatingSystemTmpSol:= getenv(OSTYPE);
      OperatingSystemTmpWin:= getenv(OS);
      OperatingSystemTmpLin:= getenv(OSNAME);
      OperatingSystemTmp:=cat(OperatingSystemTmpSol,OperatingSystemTmpWin,OperatingSystemTmpLin);

      #
      # set to solaris if "solaris" occurs in environment var
      # e.g. "solaris2.7" is reduced to "solaris"
      #
      if not
        searchtext("solaris", OperatingSystemTmp)=0
      then
        OperatingSystemTmp:= "solaris";
      end if;

      #
      # set to windows if "windows" occurs in environment var
      #
      if not
        searchtext("windows",OperatingSystemTmp)=0
      then
        OperatingSystemTmp := "windows"
      end if;

      #
      # set to linux if "linux" or "Linux" occurs in environment
      # var.
      #
      if not
        searchtext("inux", OperatingSystemTmp)=0
      then
        OperatingSystemTmp:= "linux";
      end if;

      #
      # if getenv(OSTYPE) or getenv(OS)fails, throw error
      #
      if
        not OperatingSystemTmp in {"solaris", "windows", "linux"}
      then
        error("OperatingSystem could not be detected. Set environment variable OSTYPE, OS, or OSNAME!");
      end if;

    OperatingSystem:= OperatingSystemTmp;
  end proc; #init
