########################################################################
#
# @path BVPSol/Tests/problemOlsen1983.txt
#
# @brief Finding periodic solution for the system from the article by 
#        Olsen L.F. "An enzyme reaction with a strange attractor". 
#        Physics Letters A. 1983, (94) 454-457.
#
# @revision
#   2011-01-19 written by dka
#
########################################################################
    problemOlsen1983:= proc()
    
      local expectedPeriod, aSys, BVPSOLproc, eigVals, period, nodes, sol,
            succeeded, listOfTIDESObj;  

      expectedPeriod:= 14.5391926329389083;
      
      if
        Aux:-FileOperations:-dirExists("tmpOlsen")
      then
        error("temporary directory ./tmpOlsen needed to run test already exists")
      else  
        mkdir("tmp")
      end if;

      #
      # init system of ODEs
      #
        aSys := Models:-Olsen1983:-Sys:-getSys();
        
      #
      # create instance for bvpsol
      # number of nodes for multi-shooting method M=30 
      #  
        listOfTIDESObj:=[cat(_ModulesDirectory, "/BVPSol/demo/ext_routines/fromTIDES/olsen/olsen.o"),
                         cat(_ModulesDirectory, "/BVPSol/demo/ext_routines/fromTIDES/olsen/calltides.o")];

        BVPSOLproc := BVPSol:-CreateInstance(aSys, "./tmpOlsen", 30, listOfTIDESObj);
        
      #
      # pass initial values for bvpsol
      #  
        BVPSOLproc:-setParams([k1 = .19, k3 = 0.0066651056]);
        BVPSOLproc:-setInitPoint([A = 6.0, B = 195.0, X = 0.03, Y = 0.07]);
        BVPSOLproc:-setInitPeriod(14.0);
      
      #
      # execute bvpsol 
      #
        BVPSOLproc:-runBVPSol();
        
      #
      # extract result
      #
        period:= BVPSOLproc:-getPeriod();
        eigVals:= BVPSOLproc:-getEigVals();
        nodes:=BVPSOLproc:-getXT();
        sol:=BVPSOLproc:-getSol();
        succeeded:=BVPSOLproc:-getIFAIL();
        

      #
      # compare results to expected results
      #
        if (not ((period-expectedPeriod)^2<10^(-7) and succeeded>0))
        then printf("The test problem is not succeeded");
             return(false); 
        end if;
        
        printf("The test problem is succeeded");
        return(true); 

    end proc; 
