#############################################################
#
# BVPOpt/source/copyFilesForDemo.txt
#
# @brief copies external files of TIDES into target foulder
#
# @param directory where compilled objects will be created,
#        list of compilled objects obtaned from TIDES,
#        method name ('twpbvp' or 'twpbvpdisc')
#
# @notes the main tides file is renamed to 'objtides.c' 
#
# @revision
# 2011-12-11 created by dka
#
#############################################################
  copyFilesForDemo:= proc(
    bvpoptDir::string,
    objNames::list(string),
    methodName
  )

    local i, objNamesList, oldDir, pathAndFile, objNameC, objName, objPath, 
          subName, objNameH; 

    #
    # creates bvpoptDir
    #
      if not
        Aux:-FileOperations:-dirExists(bvpoptDir)
      then
        mkdir(bvpoptDir);
      end if;


    #
    # save directory in which proc was called and change to requested dir
    #
      oldDir:= currentdir():
      currentdir(bvpoptDir): 
    # currentdir creates error if bvpoptDir does not exist


    #
    # copy external object names obtained from TIDES 
    # (depend on an induvidual problem) 
    #
        objNamesList:="";
        for i from 1 to nops(objNames) do
          pathAndFile:=Aux:-FileOperations:-splitPathAndFile(objNames[i]);
          objPath:=pathAndFile[1];
          objName:=pathAndFile[2];
          if (objName="calltides.o")
          then 
               objNameC:="calltides.c";
               FileTools[Copy](cat(objPath, "calltides.c"),cat(currentdir(), "/calltides.c")); 
          else 
               subName:= StringTools[Split](objName, ".")[1];
               objNameC:=cat(subName, ".c");
               objNameH:=cat(subName, ".h");
               FileTools[Copy](cat(objPath, objNameC),cat(currentdir(), "/", "objtides.c"));
               FileTools[Copy](cat(objPath, objNameH),cat(currentdir(), "/", objNameH));
          end if;
	  objNamesList:=cat(objNamesList,objNameC," ");
        end do;  
        

    #
    # change back to directory of calling procedure
    #
       currentdir(oldDir);
  
      RETURN();

  end proc; # copyFilesForDemo
