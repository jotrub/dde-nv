###############################################################################
#
# @path Aux/Parsers/readContentDataFromFile.txt
#
# @brief Given a filename in first parameter, reads data generated by continuation
# software content from file. 
#   name of file to be read
#
# @notes
# (i) no error checking is done, in particular add:
#     (1) check for existence of requested file
#     (2) check whether entry in first line can serve
#         as indices of table
#
# @authors mmo, dka
#
# @revision
# 2008-03-05 Renamed procedure to start with lower case letter. 
#
###############################################################################
readContentDataFromFile:= proc(
  FileName::string
)

  local line, ColNames, Data, item, CurrentRow, i1,i2, alist, ScanString,
    ScanStringFirstLine, ListOfIndices,NumOfCols, NamedLists;

  #
  # make sure file is read starting with first line
  #
    try: 
      close(FileName)
    end try; 

  #
  # read first line which contains title for columns
  #
    line:= readline(FileName);

  #
  # determine how many string are in first line-> NumOfCols
  #
     alist:=convert(line,list);
     NumOfCols:= 0;
     for i2 from 1 to nops(alist) do
       if alist[i2]=" " and not alist[i2+1]=" "
       then
       NumOfCols:= NumOfCols+ 1;
       end if;
     end do;

     if (alist[1]=" ")
     then
       NumOfCols= NumOfCols-1;
     end if;

     NumOfCols:= NumOfCols+1;


    ScanStringFirstLine:= "";
    ScanString:= "";
    for i1 from 1 to NumOfCols do
      ScanStringFirstLine:= cat(ScanStringFirstLine, "%a ");
      ScanString:= cat(ScanString, "%e "); 
    end do;

    ColNames:= sscanf(line, ScanStringFirstLine);
    ColNames:= map(convert, ColNames, symbol); 
  #
  # create table of data with lists in it
  #   
    Data:= table();
    for item in ColNames do
      Data[item]:= [];
    end do;

  #
  # loop over rows in file
  #
  while true do
    line:= readline(FileName);   

    #
    # exit condition
    #
      if 
        line=0 
      then 
        break; 
      end if; 

    #
    # read floats from current line
    #
      CurrentRow:= sscanf(line, ScanString);

    #
    # put data in corresponding list
    #
      for i1 from 1 to nops(ColNames) do
        Data[ColNames[i1]]:= [
          op(Data[ColNames[i1]]), 
          CurrentRow[i1]
        ];
      end do;

    end do; # loop over rows in file

  #
  # extract table data in to list of named lists
  # 
    ListOfIndices:= map(op, [indices(Data)]);
   
    NamedLists:= []:
    for i1 from 1 to nops(Data[ListOfIndices[1]]) do
      NamedLists:= [
        op(NamedLists), 
        [seq(
          ListOfIndices[i2]= Data[ListOfIndices[i2]][i1],
          i2= 1..nops(ListOfIndices)
        )]
      ];
    end do;
      
  return(NamedLists); 

end proc:
